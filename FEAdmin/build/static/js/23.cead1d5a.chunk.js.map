{"version":3,"sources":["app/EgretLayout/Layout2/Layout2Navbar.jsx","app/EgretLayout/Layout2/Layout2Sidenav.jsx","app/EgretLayout/Layout2/Layout2Topbar.jsx","app/EgretLayout/Layout2/Layout2.jsx"],"names":["ViewEgretHorizontalNav","withTranslation","EgretHorizontalNav","Layout2Navbar","state","_this$props","this","props","theme","settings","navbarTheme","themes","layout2Settings","navbar","react_default","a","createElement","ThemeProvider","Helmet","concat","palette","primary","contrastText","main","dark","className","navigation","navigations","max","Component","withStyles","withTheme","connect","layout","Layout2Sidenav","sidenavToggleChecked","updateSidebarMode","sidebarSettings","_this","setLayoutSettings","Object","objectSpread2","leftSidebar","_this2","unlistenRouteChange","history","listen","location","action","isMobile","mode","_this$props2","sidenavTheme","SidenavTheme","Brand","Sidenav","withRouter","setDefaultSettings","PropTypes","func","isRequired","ViewLanguageSelect","LanguageSelect","Layout2Topbar","handleSignOut","logoutUser","handleSidebarToggle","topbarTheme","topbar","divider","src","ConstantList","ROOT_PATH","alt","egret","offsetTop","NotificationBar","ShoppingCart","menuButton","MenuItem","style","minWidth","Icon","onClick","Hidden","mdUp","IconButton","Layout2","classes","layoutClasses","[object Object]","activeLayout","appContext","Consumer","_ref","routes","react","classList","show","Layout2_Layout2Topbar","smDown","Layout2_Layout2Navbar","Layout2_Layout2Sidenav","perfectScrollbar","options","suppressScrollX","renderRoutes","footer","fixed","Footer","secondarySidebar","SecondarySidebar","backgroundColor","background","default","color","text"],"mappings":"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","file":"static/js/23.cead1d5a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { EgretHorizontalNav } from \"egret\";\r\nimport { navigations } from \"../../navigations\";\r\nimport { withStyles, MuiThemeProvider } from \"@material-ui/core\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nconst ViewEgretHorizontalNav = withTranslation()(EgretHorizontalNav);\r\nclass Layout2Navbar extends Component {\r\n  state = {};\r\n  render() {\r\n    let { theme, settings } = this.props;\r\n    const navbarTheme =\r\n      settings.themes[settings.layout2Settings.navbar.theme] || theme;\r\n    return (\r\n      <MuiThemeProvider theme={navbarTheme}>\r\n        <Helmet>\r\n          <style>\r\n            {`.horizontal-nav a, \r\n              .horizontal-nav label {\r\n                color: ${navbarTheme.palette.primary.contrastText};\r\n              }\r\n              .navbar,\r\n              .horizontal-nav ul ul {\r\n                background: ${navbarTheme.palette.primary.main};\r\n              }\r\n              .horizontal-nav ul li ul li:hover,\r\n              .horizontal-nav ul li ul li.open {\r\n                background: ${navbarTheme.palette.primary.dark};\r\n              }\r\n            `}\r\n          </style>\r\n        </Helmet>\r\n        <div className=\"navbar\">\r\n          <div className=\"container\">\r\n            <ViewEgretHorizontalNav navigation={navigations} max={6} />\r\n          </div>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nLayout2Navbar.propTypes = {\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles({}, { withTheme: true })(\r\n  connect(\r\n    mapStateToProps,\r\n    {}\r\n  )(Layout2Navbar)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles, MuiThemeProvider } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setLayoutSettings,\r\n  setDefaultSettings\r\n} from \"app/redux/actions/LayoutActions\";\r\nimport { isMobile } from \"utils\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Sidenav from \"../SharedCompoents/Sidenav\";\r\nimport Brand from \"../SharedCompoents/Brand\";\r\nimport SidenavTheme from \"../EgretTheme/SidenavTheme\";\r\n\r\nclass Layout2Sidenav extends Component {\r\n  state = {\r\n    sidenavToggleChecked: false\r\n  };\r\n\r\n  componentWillMount() {\r\n    // CLOSE SIDENAV ON ROUTE CHANGE ON MOBILE\r\n    this.unlistenRouteChange = this.props.history.listen((location, action) => {\r\n      if (isMobile()) {\r\n        this.updateSidebarMode({ mode: \"close\" });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unlistenRouteChange();\r\n  }\r\n\r\n  updateSidebarMode = sidebarSettings => {\r\n    let { settings, setLayoutSettings } = this.props;\r\n    setLayoutSettings({\r\n      ...settings,\r\n      layout2Settings: {\r\n        ...settings.layout2Settings,\r\n        leftSidebar: {\r\n          ...settings.layout2Settings.leftSidebar,\r\n          ...sidebarSettings\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { theme, settings } = this.props;\r\n    const sidenavTheme =\r\n      settings.themes[settings.layout2Settings.leftSidebar.theme] || theme;\r\n    return (\r\n      <MuiThemeProvider theme={sidenavTheme}>\r\n        <SidenavTheme theme={sidenavTheme} settings={settings} />\r\n        <div className=\"sidenav\">\r\n          <div className=\"sidenav__hold\">\r\n            <Brand />\r\n            <Sidenav />\r\n          </div>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nLayout2Sidenav.propTypes = {\r\n  setDefaultSettings: PropTypes.func.isRequired,\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setDefaultSettings: PropTypes.func.isRequired,\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles({}, { withTheme: true })(\r\n  withRouter(\r\n    connect(\r\n      mapStateToProps,\r\n      {\r\n        setLayoutSettings,\r\n        setDefaultSettings\r\n      }\r\n    )(Layout2Sidenav)\r\n  )\r\n);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Icon,\r\n  IconButton,\r\n  Badge,\r\n  Hidden,\r\n  withStyles,\r\n  MuiThemeProvider,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\nimport { EgretMenu, EgretToolbarMenu, EgretSearchBox } from \"egret\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport NotificationBar from \"../SharedCompoents/NotificationBar\";\r\nimport ShoppingCart from \"../SharedCompoents/ShoppingCart\";\r\nimport ConstantList from \"../../appConfig\";\r\nimport LanguageSelect from '../SharedCompoents/LanguageSelect';\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport { logoutUser } from \"app/redux/actions/UserActions\";\r\nconst ViewLanguageSelect = withTranslation()(LanguageSelect);\r\nclass Layout2Topbar extends Component {\r\n  state = {};\r\n\r\n  handleSignOut = () => {this.props.logoutUser();};\r\n\r\n  updateSidebarMode = sidebarSettings => {\r\n    let { settings, setLayoutSettings } = this.props;\r\n\r\n    setLayoutSettings({\r\n      ...settings,\r\n      layout2Settings: {\r\n        ...settings.layout2Settings,\r\n        leftSidebar: {\r\n          ...settings.layout2Settings.leftSidebar,\r\n          ...sidebarSettings\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSidebarToggle = () => {\r\n    let { settings } = this.props;\r\n    let { layout2Settings } = settings;\r\n\r\n    let mode =\r\n      layout2Settings.leftSidebar.mode === \"close\" ? \"mobile\" : \"close\";\r\n\r\n    this.updateSidebarMode({ mode });\r\n  };\r\n\r\n  render() {\r\n    let { theme, settings } = this.props;\r\n    const topbarTheme =\r\n      settings.themes[settings.layout2Settings.topbar.theme] || theme;\r\n    return (\r\n      <MuiThemeProvider theme={topbarTheme}>\r\n        <Helmet>\r\n          <style>\r\n            {`.topbar {\r\n              background-color: ${topbarTheme.palette.primary.main};\r\n              border-color: ${topbarTheme.palette.divider} !important;\r\n            }\r\n            .topbar .brand__text {\r\n              color: ${topbarTheme.palette.primary.contrastText};\r\n            }\r\n            `}\r\n          </style>\r\n        </Helmet>\r\n\r\n        <div className=\"topbar\">\r\n          <div className=\"flex flex-space-between flex-middle container h-100\">\r\n            <div className=\"flex flex-middle brand\">\r\n              <img src={ConstantList.ROOT_PATH+\"assets/images/logo.svg\"} alt=\"company-logo\" />\r\n              <span className=\"brand__text\">Egret</span>\r\n            </div>\r\n            <div className=\"mx-auto\"></div>\r\n            <div className=\"flex flex-middle\">\r\n              <EgretToolbarMenu offsetTop=\"80px\">\r\n                <ViewLanguageSelect/>\r\n                <EgretSearchBox />\r\n\r\n                <NotificationBar />\r\n\r\n                <ShoppingCart/>\r\n\r\n                <EgretMenu\r\n                  menuButton={\r\n                    <img\r\n                      className=\"mx-8 text-middle circular-image-small cursor-pointer\"\r\n                      src={ConstantList.ROOT_PATH+ \"assets/images/avatar.jpg\"}\r\n                      alt=\"user\"\r\n                    />\r\n                  }\r\n                >\r\n                  <MenuItem\r\n                    className=\"flex flex-middle\"\r\n                    style={{ minWidth: 185 }}\r\n                  >\r\n                    <Icon> home </Icon>\r\n                    <span className=\"pl-16\"> Home </span>\r\n                  </MenuItem>\r\n                  <MenuItem\r\n                    className=\"flex flex-middle\"\r\n                    style={{ minWidth: 185 }}\r\n                  >\r\n                    <Icon> person </Icon>\r\n                    <span className=\"pl-16\"> Person </span>\r\n                  </MenuItem>\r\n                  <MenuItem\r\n                    onClick={this.handleSignOut}\r\n                    className=\"flex flex-middle\"\r\n                    style={{ minWidth: 185 }}\r\n                  >\r\n                    <Icon> power_settings_new </Icon>\r\n                    <span className=\"pl-16\"> Logout </span>\r\n                  </MenuItem>\r\n                </EgretMenu>\r\n              </EgretToolbarMenu>\r\n\r\n              <Hidden mdUp>\r\n                <IconButton onClick={this.handleSidebarToggle}>\r\n                  <Icon>menu</Icon>\r\n                </IconButton>\r\n              </Hidden>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nLayout2Topbar.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles({}, { withTheme: true })(\r\n  connect(\r\n    mapStateToProps,\r\n    { setLayoutSettings, logoutUser }\r\n  )(Layout2Topbar)\r\n);\r\n","import React, { Component, Fragment } from \"react\";\r\n\r\nimport { Hidden } from \"@material-ui/core\";\r\nimport AppContext from \"app/appContext\";\r\nimport Footer from \"../SharedCompoents/Footer\";\r\nimport Layout2Navbar from \"./Layout2Navbar\";\r\nimport Layout2Sidenav from \"./Layout2Sidenav\";\r\nimport Layout2Topbar from \"./Layout2Topbar\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport Scrollbar from \"react-perfect-scrollbar\";\r\nimport SecondarySidebar from \"../SharedCompoents/SecondarySidebar\";\r\nimport { classList } from \"utils\";\r\nimport { connect } from \"react-redux\";\r\nimport { renderRoutes } from \"react-router-config\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\n\r\nconst styles = theme => {\r\n  return {\r\n    layout: {\r\n      backgroundColor: theme.palette.background.default,\r\n      color: theme.palette.text.primary\r\n    }\r\n  };\r\n};\r\n\r\nclass Layout2 extends Component {\r\n  state = {};\r\n  updateSidebarMode = sidebarSettings => {\r\n    let { settings, setLayoutSettings } = this.props;\r\n    setLayoutSettings({\r\n      ...settings,\r\n      layout2Settings: {\r\n        ...settings.layout2Settings,\r\n        leftSidebar: {\r\n          ...settings.layout2Settings.leftSidebar,\r\n          ...sidebarSettings\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { settings, classes, theme } = this.props;\r\n    let { layout2Settings } = settings;\r\n\r\n    // let layoutClasses = {\r\n    //   [classes.layout]: true,\r\n    //   [settings.activeLayout]: true,\r\n    //   [`sidenav-${layout2Settings.leftSidebar.mode}`]: true,\r\n    //   [`layout-${layout2Settings.mode} theme-${theme.palette.type}`]: true\r\n    // };\r\n    let layoutClasses = {\r\n      [classes.layout]: true,\r\n      [settings.activeLayout]: true,\r\n      [`sidenav-${layout2Settings.leftSidebar.mode}`]: true,\r\n      [`layout-${layout2Settings.mode}`]: true\r\n    };\r\n    return (\r\n      <AppContext.Consumer>\r\n        {({ routes }) => (\r\n          <Fragment>\r\n            <div className={classList(layoutClasses)}>\r\n              {layout2Settings.topbar.show && <Layout2Topbar />}\r\n\r\n              <Hidden smDown>\r\n                {layout2Settings.navbar.show && <Layout2Navbar />}\r\n              </Hidden>\r\n\r\n              <Hidden mdUp>\r\n                {layout2Settings.leftSidebar.show && <Layout2Sidenav />}\r\n              </Hidden>\r\n\r\n              {settings.perfectScrollbar && (\r\n                // <Scrollbar\r\n                //   options={{ suppressScrollX: true }}\r\n                //   className=\"scrollable-content p-0\"\r\n                // >\r\n                //   <div className=\"container p-0\">{renderRoutes(routes)}</div>\r\n                //   <div className=\"my-auto\"></div>\r\n                //   {settings.footer.show && !settings.footer.fixed && <Footer />}\r\n                // </Scrollbar>\r\n                <div\r\n                  options={{ suppressScrollX: true }}\r\n                  className=\"scrollable-content p-0\"\r\n                >\r\n                  <div className=\"container p-0\">{renderRoutes(routes)}</div>\r\n                  <div className=\"my-auto\"></div>\r\n                  {settings.footer.show && !settings.footer.fixed && <Footer />}\r\n                </div>                \r\n              )}\r\n\r\n              {!settings.perfectScrollbar && (\r\n                <div\r\n                  options={{ suppressScrollX: true }}\r\n                  className=\"scrollable-content p-0\"\r\n                >\r\n                  <div className=\"container p-0\">{renderRoutes(routes)}</div>\r\n                  <div className=\"my-auto\"></div>\r\n                  {settings.footer.show && !settings.footer.fixed && <Footer />}\r\n                </div>\r\n              )}\r\n\r\n              {settings.footer.show && settings.footer.fixed && <Footer />}\r\n            </div>\r\n            {settings.secondarySidebar.show && <SecondarySidebar />}\r\n          </Fragment>\r\n        )}\r\n      </AppContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nLayout2.propTypes = {\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  connect(\r\n    mapStateToProps,\r\n    { setLayoutSettings }\r\n  )(Layout2)\r\n);\r\n"],"sourceRoot":""}