{"version":3,"sources":["app/EgretLayout/Layout1/Layout1Topbar.jsx","app/EgretLayout/Layout1/Layout1Sidenav.jsx","app/EgretLayout/Layout1/Layout1.jsx"],"names":["ViewLanguageSelect","withTranslation","LanguageSelect","Layout1Topbar","state","updateSidebarMode","sidebarSettings","_this$props","_this","props","settings","setLayoutSettings","Object","objectSpread2","layout1Settings","leftSidebar","handleSidebarToggle","mode","isMdScreen","handleSignOut","logoutUser","imagePath","ConstantList","ROOT_PATH","user","authService","getLoginUser","API_ENPOINT","_this$props2","this","t","_this$props3","i18n","theme","topbarTheme","themes","topbar","react_default","a","createElement","ThemeProvider","className","style","backgroundColor","palette","primary","main","IconButton","onClick","Icon","egret","NotificationBar","ShoppingCart","menuButton","src","alt","MenuItem","minWidth","react_router_dom","to","Component","withStyles","root","withTheme","withRouter","connect","PropTypes","func","isRequired","layout","IconButtonWhite","padding","IconSmall","fontSize","Layout1Sidenav","sidenavToggleChecked","hidden","setDefaultSettings","updatedSettings","handleSidenavToggle","setState","renderLogoSwitch","Brand","Switch","onChange","checked","color","renderUser","displayName","username","Tooltip","title","aria-label","size","_this2","unlistenRouteChange","history","listen","location","action","setTimeout","sidenavTheme","SidenavTheme","react","Sidenav","ViewLayout1Sidenav","ViewLayout1Topbar","Layout1","classes","layoutClasses","[object Object]","concat","activeLayout","topbar-fixed","fixed","appContext","Consumer","_ref","routes","classList","show","perfectScrollbar","paddingBottom","Layout1_Layout1Topbar","renderRoutes","footer","Footer","background","default"],"mappings":"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","file":"static/js/22.4e11157c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ConstantList from \"../../appConfig\";\r\nimport {\r\n  Icon,\r\n  IconButton,\r\n  Badge,\r\n  MenuItem,\r\n  withStyles,\r\n  MuiThemeProvider\r\n} from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport { logoutUser } from \"app/redux/actions/UserActions\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { EgretMenu, EgretSearchBox } from \"egret\";\r\nimport { isMdScreen } from \"utils\";\r\nimport NotificationBar from \"../SharedCompoents/NotificationBar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ShoppingCart from \"../SharedCompoents/ShoppingCart\";\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport Select from '@material-ui/core/Select';\r\nimport LanguageSelect from '../SharedCompoents/LanguageSelect';\r\nimport authService from \"../../services/jwtAuthService\";\r\nconst styles = theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.primary.main\r\n  }\r\n});\r\nconst ViewLanguageSelect = withTranslation()(LanguageSelect);\r\n\r\nclass Layout1Topbar extends Component {\r\n  state = {};\r\n\r\n  updateSidebarMode = sidebarSettings => {\r\n    let { settings, setLayoutSettings } = this.props;\r\n\r\n    setLayoutSettings({\r\n      ...settings,\r\n      layout1Settings: {\r\n        ...settings.layout1Settings,\r\n        leftSidebar: {\r\n          ...settings.layout1Settings.leftSidebar,\r\n          ...sidebarSettings\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSidebarToggle = () => {\r\n    let { settings } = this.props;\r\n    let { layout1Settings } = settings;\r\n\r\n    let mode;\r\n    if (isMdScreen()) {\r\n      mode = layout1Settings.leftSidebar.mode === \"close\" ? \"mobile\" : \"close\";\r\n    } else {\r\n      mode = layout1Settings.leftSidebar.mode === \"full\" ? \"close\" : \"full\";\r\n    }\r\n    this.updateSidebarMode({ mode });\r\n  };\r\n\r\n  handleSignOut = () => {\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  render() {\r\n    let imagePath =ConstantList.ROOT_PATH+\"assets/images/avatar.jpg\"\r\n    let user = authService.getLoginUser();\r\n    if(user!=null && user.imagePath!=null){\r\n      imagePath =ConstantList.API_ENPOINT + user.imagePath;\r\n    }\r\n    const { t, i18n } = this.props;\r\n    let { theme, settings } = this.props;\r\n    let language= 'en';\r\n    const changeLanguage = lng => {\r\n      alert(lng);\r\n      i18n.changeLanguage(lng);\r\n      //alert('here');\r\n    };    \r\n\r\n  \r\n    const topbarTheme =\r\n      settings.themes[settings.layout1Settings.topbar.theme] || theme;\r\n    return (\r\n      <MuiThemeProvider theme={topbarTheme}>\r\n        <div className=\"topbar\">\r\n          <div\r\n            className={`topbar-hold`}\r\n            style={{ backgroundColor: topbarTheme.palette.primary.main }}\r\n          >\r\n            <div className=\"flex flex-space-between flex-middle h-100\">\r\n              <div className=\"flex\">\r\n                <IconButton onClick={this.handleSidebarToggle}>\r\n                  <Icon>menu</Icon>\r\n                </IconButton>\r\n\r\n                <div className=\"hide-on-mobile\">\r\n                  {/* <IconButton>\r\n                    <Icon>mail_outline</Icon>\r\n                  </IconButton>\r\n\r\n                  <IconButton>\r\n                    <Icon>web_asset</Icon>\r\n                  </IconButton>\r\n\r\n                  <IconButton>\r\n                    <Icon>star_outline</Icon>\r\n                  </IconButton> */}\r\n                </div>\r\n              </div>\r\n              <div className=\"flex flex-middle\">\r\n                <EgretSearchBox />\r\n                <ViewLanguageSelect/>\r\n                <NotificationBar />\r\n                <ShoppingCart></ShoppingCart>\r\n                {/* <select class=\"form-control language-selector\"  onClick={() => changeLanguage('en')}>\r\n                    <option value=\"de\">Deutsch</option>\r\n                    <option value=\"en\">English</option>\r\n                    <option value=\"fr\">Français</option>\r\n                    <option value=\"it\">Italiano</option>\r\n                </select> */}\r\n                \r\n                <EgretMenu\r\n                  menuButton={\r\n                    <img\r\n                      className=\"mx-8 text-middle circular-image-small cursor-pointer\"\r\n                      src={imagePath}\r\n                      alt=\"user\"\r\n                    />\r\n                  }\r\n                >\r\n                  <MenuItem style={{ minWidth: 185 }}>\r\n                    <Link className=\"flex flex-middle\" to=\"/\">\r\n                      <Icon> home </Icon>\r\n                      <span className=\"pl-16\"> {t('Dashboard.dashboard')} </span>\r\n                    </Link>\r\n                  </MenuItem>\r\n                  <MenuItem style={{ minWidth: 185 }}>\r\n                    <Link\r\n                      className=\"flex flex-middle\"\r\n                      to=\"/page-layouts/user-profile\"\r\n                    >\r\n                      <Icon> person </Icon>\r\n                      <span className=\"pl-16\"> {t('Dashboard.profile')} </span>\r\n                    </Link>\r\n                  </MenuItem>\r\n                  <MenuItem\r\n                    onClick={this.handleSignOut}\r\n                    className=\"flex flex-middle\"\r\n                    style={{ minWidth: 185 }}\r\n                  >\r\n                    <Icon> power_settings_new </Icon>\r\n                    <span className=\"pl-16\"> {t('Dashboard.logout')} </span>\r\n                  </MenuItem>\r\n                </EgretMenu>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nLayout1Topbar.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  withRouter(\r\n    connect(\r\n      mapStateToProps,\r\n      { setLayoutSettings, logoutUser }\r\n    )(Layout1Topbar)\r\n  )\r\n);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Switch,\r\n  Icon,\r\n  withStyles,\r\n  MenuItem,\r\n  Tooltip,\r\n  IconButton,\r\n  MuiThemeProvider\r\n} from \"@material-ui/core\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setLayoutSettings,\r\n  setDefaultSettings\r\n} from \"app/redux/actions/LayoutActions\";\r\nimport { logoutUser } from \"app/redux/actions/UserActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { EgretMenu } from \"egret\";\r\nimport Sidenav from \"../SharedCompoents/Sidenav\";\r\nimport Brand from \"../SharedCompoents/Brand\";\r\nimport SidenavTheme from \"../EgretTheme/SidenavTheme\";\r\nimport { isMdScreen } from \"utils\";\r\nimport ConstantList from \"../../appConfig\";\r\nimport { Link } from \"react-router-dom\";\r\nimport authService from \"../../services/jwtAuthService\";\r\nconst styles = theme => ({});\r\n\r\nconst IconButtonWhite = withStyles(theme => ({\r\n  root: {\r\n    // color: theme.palette.getContrastText(purple[500]),\r\n    backgroundColor: \"transparent\",\r\n    padding: \"5px\"\r\n  }\r\n}))(IconButton);\r\n\r\nconst IconSmall = withStyles(() => ({\r\n  root: {\r\n    fontSize: \"1rem\"\r\n  }\r\n}))(Icon);\r\n\r\nclass Layout1Sidenav extends Component {\r\n  state = {\r\n    sidenavToggleChecked: false,\r\n    hidden: true\r\n  };\r\n\r\n  componentWillMount() {\r\n    // CLOSE SIDENAV ON ROUTE CHANGE ON MOBILE\r\n    this.unlistenRouteChange = this.props.history.listen((location, action) => {\r\n      if (isMdScreen()) {\r\n        this.updateSidebarMode({ mode: \"close\" });\r\n      }\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.setState({ hidden: false });\r\n    }, 400);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unlistenRouteChange();\r\n  }\r\n\r\n  updateSidebarMode = sidebarSettings => {\r\n    let { settings, setLayoutSettings, setDefaultSettings } = this.props;\r\n    const updatedSettings = {\r\n      ...settings,\r\n      layout1Settings: {\r\n        ...settings.layout1Settings,\r\n        leftSidebar: {\r\n          ...settings.layout1Settings.leftSidebar,\r\n          ...sidebarSettings\r\n        }\r\n      }\r\n    };\r\n    setLayoutSettings(updatedSettings);\r\n    setDefaultSettings(updatedSettings);\r\n  };\r\n\r\n  handleSidenavToggle = () => {\r\n    let { sidenavToggleChecked } = this.state;\r\n    let mode = sidenavToggleChecked ? \"full\" : \"compact\";\r\n    this.updateSidebarMode({ mode });\r\n    this.setState({ sidenavToggleChecked: !sidenavToggleChecked });\r\n  };\r\n\r\n  handleSignOut = () => {\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  renderLogoSwitch = () => (\r\n    // Open Brand component file to replace logo and text\r\n    <Brand>\r\n      <Switch\r\n        className=\"sidenav__toggle hide-on-mobile\"\r\n        onChange={this.handleSidenavToggle}\r\n        checked={this.state.sidenavToggleChecked}\r\n        color=\"secondary\"\r\n      />\r\n    </Brand>\r\n  );\r\n\r\n  renderUser = () => {\r\n    const { t, i18n } = this.props;\r\n    //let { user } = this.props;\r\n    let imagePath =ConstantList.ROOT_PATH+\"assets/images/avatar.jpg\"\r\n    //let user = authService.getLoginUser();\r\n\r\n    let user = authService.getLoginUser();\r\n    if(user!=null && user.imagePath!=null){\r\n      imagePath =ConstantList.API_ENPOINT + user.imagePath;\r\n    }\r\n\r\n    if(user!=null && user.imagePath!=null){\r\n      imagePath =ConstantList.API_ENPOINT + user.imagePath;\r\n    }\r\n    return (\r\n      <div className=\"sidenav__user\">\r\n        <div className=\"username-photo\">\r\n          <img src={imagePath} alt=\"user\" />\r\n          <span className=\"username text-center\">\r\n            {user? user.displayName : ''}\r\n            <br/>\r\n            {user? user.username: ''}\r\n          </span>\r\n        </div>\r\n        <div className=\"user__menu\">\r\n          <EgretMenu\r\n          // menuButton={\r\n          //   <Tooltip title=\"Settings\">\r\n          //     <IconButtonWhite aria-label=\"Delete\" className=\"\" size=\"small\">\r\n          //       <IconSmall> settings </IconSmall>\r\n          //     </IconButtonWhite>\r\n          //   </Tooltip>\r\n          // }\r\n          >\r\n            <MenuItem className=\"flex flex-middle\" style={{ minWidth: 185 }}>\r\n              <Icon> home </Icon>\r\n              <span className=\"pl-16\"> {t('Dashboard.dashboard')} </span>\r\n            </MenuItem>\r\n            {/* <MenuItem className=\"flex flex-middle\" style={{ minWidth: 185 }}>\r\n              <Icon> settings </Icon>\r\n              <span className=\"pl-16\"> Account Setting </span>\r\n            </MenuItem> */}\r\n          </EgretMenu>\r\n\r\n          <Tooltip title={t('Dashboard.profile')}>\r\n            <Link\r\n              className=\"flex flex-middle\"\r\n              to=\"/page-layouts/user-profile\"\r\n            >\r\n              <IconButtonWhite aria-label=\"Delete\" className=\"\" size=\"small\">\r\n                <IconSmall>person</IconSmall>\r\n              </IconButtonWhite>\r\n            </Link>\r\n          </Tooltip>\r\n          <Tooltip title={t('Dashboard.logout')}>\r\n            <IconButtonWhite\r\n              aria-label=\"Delete\"\r\n              className=\"\"\r\n              size=\"small\"\r\n              onClick={this.handleSignOut}\r\n            >\r\n              <IconSmall>exit_to_app</IconSmall>\r\n            </IconButtonWhite>\r\n          </Tooltip>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let { theme, settings } = this.props;\r\n    const sidenavTheme =\r\n      settings.themes[settings.layout1Settings.leftSidebar.theme] || theme;\r\n      \r\n    return (\r\n      <MuiThemeProvider theme={sidenavTheme}>\r\n        <SidenavTheme theme={sidenavTheme} settings={settings} />\r\n\r\n        <div className=\"sidenav\">\r\n          <div className=\"sidenav__hold\">\r\n            {!this.state.hidden && (\r\n              <Fragment>\r\n                {this.renderLogoSwitch()}\r\n                <Sidenav>{this.renderUser()}</Sidenav>\r\n              </Fragment>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nLayout1Sidenav.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  setDefaultSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setDefaultSettings: PropTypes.func.isRequired,\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  user: state.user,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  withRouter(\r\n    connect(\r\n      mapStateToProps,\r\n      {\r\n        setLayoutSettings,\r\n        setDefaultSettings,\r\n        logoutUser\r\n      }\r\n    )(Layout1Sidenav)\r\n  )\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport Scrollbar from \"react-perfect-scrollbar\";\r\nimport { isMdScreen, classList } from \"utils\";\r\nimport { renderRoutes } from \"react-router-config\";\r\nimport Layout1Topbar from \"./Layout1Topbar\";\r\nimport Layout1Sidenav from \"./Layout1Sidenav\";\r\nimport Footer from \"../SharedCompoents/Footer\";\r\nimport SecondarySidebar from \"../SharedCompoents/SecondarySidebar\";\r\nimport AppContext from \"app/appContext\";\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\n// import {EgretLoadable} from \"egret\";\r\n\r\n// const SecondarySidebar = EgretLoadable({\r\n//   loader: () => import(\"../SharedCompoents/SecondarySidebar\")\r\n// });\r\n\r\n// const Footer = EgretLoadable({\r\n//   loader: () => import(\"../SharedCompoents/Footer\")\r\n// });\r\n\r\n// const Layout1Topbar = EgretLoadable({\r\n//   loader: () => import(\"./Layout1Topbar\")\r\n// });\r\n\r\n// const Layout1Sidenav = EgretLoadable({\r\n//   loader: () => import(\"./Layout1Sidenav\")\r\n// });\r\nconst ViewLayout1Sidenav = withTranslation()(Layout1Sidenav);\r\nconst ViewLayout1Topbar = withTranslation()(Layout1Topbar);\r\nconst styles = theme => {\r\n  return {\r\n    layout: {\r\n      backgroundColor: theme.palette.background.default\r\n    }\r\n  };\r\n};\r\n\r\nclass Layout1 extends Component {\r\n  componentWillMount() {\r\n    if (isMdScreen()) {\r\n      this.updateSidebarMode({ mode: \"close\" });\r\n    }\r\n    // if (window) {\r\n    //   // SET DIRECTION\r\n    //   let { settings } = this.props;\r\n    //   document.body.setAttribute(\"dir\", settings.direction);\r\n    // }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // if (window) {\r\n    //   document.body.removeAttribute(\"dir\");\r\n    // }\r\n  }\r\n\r\n  updateSidebarMode = sidebarSettings => {\r\n    let { settings, setLayoutSettings } = this.props;\r\n    setLayoutSettings({\r\n      ...settings,\r\n      layout1Settings: {\r\n        ...settings.layout1Settings,\r\n        leftSidebar: {\r\n          ...settings.layout1Settings.leftSidebar,\r\n          ...sidebarSettings\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { settings, classes, theme } = this.props;\r\n\r\n    let { layout1Settings } = settings;\r\n    // let layoutClasses = {\r\n    //   [classes.layout]: true,\r\n    //   [`${settings.activeLayout} sidenav-${layout1Settings.leftSidebar.mode} theme-${theme.palette.type} flex`]: true,\r\n    //   \"topbar-fixed\": layout1Settings.topbar.fixed\r\n    // };\r\n    let layoutClasses = {\r\n      [classes.layout]: true,\r\n      [`${settings.activeLayout} sidenav-${layout1Settings.leftSidebar.mode}`]: true,\r\n      \"topbar-fixed\": layout1Settings.topbar.fixed\r\n    };\r\n    return (\r\n      <AppContext.Consumer>\r\n        {({ routes }) => (\r\n          <div className={classList(layoutClasses)}>\r\n\r\n            {layout1Settings.leftSidebar.show && <ViewLayout1Sidenav />}\r\n\r\n            <div className=\"content-wrap position-relative\">\r\n              {layout1Settings.topbar.show && layout1Settings.topbar.fixed && (\r\n                // <Layout1Topbar />\r\n                <ViewLayout1Topbar />\r\n              )}\r\n\r\n              {settings.perfectScrollbar && (\r\n                // <Scrollbar className=\"scrollable-content\">\r\n                //   {layout1Settings.topbar.show &&\r\n                //     !layout1Settings.topbar.fixed && <Layout1Topbar />}\r\n                //   <div className=\"content\">{renderRoutes(routes)}</div>\r\n                //   <div className=\"my-auto\" />\r\n                //   {settings.footer.show && !settings.footer.fixed && <Footer />}\r\n                // </Scrollbar>\r\n                <div className=\"scrollable-content\" style={{ paddingBottom: '64px' }}>\r\n                  {layout1Settings.topbar.show &&\r\n                    !layout1Settings.topbar.fixed && <Layout1Topbar />}\r\n                  <div className=\"content\">{renderRoutes(routes)}</div>\r\n                  <div className=\"my-auto\" />\r\n                  {settings.footer.show && !settings.footer.fixed && <Footer />}\r\n                </div>\r\n              )}\r\n\r\n              {!settings.perfectScrollbar && (\r\n                <div className=\"scrollable-content\" style={{ paddingBottom: '64px' }}>\r\n                  {layout1Settings.topbar.show &&\r\n                    !layout1Settings.topbar.fixed && <Layout1Topbar />}\r\n                  <div className=\"content\">{renderRoutes(routes)}</div>\r\n                  <div className=\"my-auto\" />\r\n                  {settings.footer.show && !settings.footer.fixed && <Footer />}\r\n                </div>\r\n              )}\r\n\r\n              {settings.footer.show && settings.footer.fixed && <Footer />}\r\n            </div>\r\n            {/* {settings.secondarySidebar.show && <SecondarySidebar />} */}\r\n\r\n          </div>\r\n        )}\r\n      </AppContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nLayout1.propTypes = {\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  connect(\r\n    mapStateToProps,\r\n    { setLayoutSettings }\r\n  )(Layout1)\r\n);\r\n"],"sourceRoot":""}