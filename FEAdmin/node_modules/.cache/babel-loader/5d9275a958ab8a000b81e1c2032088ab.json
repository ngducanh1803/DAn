{"ast":null,"code":"import axiosMiddleware from \"redux-axios-middleware\";\nimport thunk from \"redux-thunk\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from 'redux-saga';\nimport RootReducer from \"./reducers/RootReducer\";\nimport HttpService from \"app/services/HttpService\";\nimport rootSaga from \"./sagas\";\nvar initialState = {};\nvar sagaMiddleware = createSagaMiddleware();\nvar middlewares = [thunk, sagaMiddleware, axiosMiddleware(HttpService.getAxiosClient())];\nexport var Store = createStore(RootReducer, initialState, compose(applyMiddleware.apply(void 0, middlewares)));\nsagaMiddleware.run(rootSaga);","map":{"version":3,"sources":["D:/DAn/FEAdmin/src/app/redux/Store.js"],"names":["axiosMiddleware","thunk","createStore","applyMiddleware","compose","createSagaMiddleware","RootReducer","HttpService","rootSaga","initialState","sagaMiddleware","middlewares","getAxiosClient","Store","run"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,wBAA5B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,QAAP,MAAqB,SAArB;AAEA,IAAMC,YAAY,GAAG,EAArB;AAEA,IAAMC,cAAc,GAAGL,oBAAoB,EAA3C;AAEA,IAAMM,WAAW,GAAG,CAClBV,KADkB,EACXS,cADW,EAGlBV,eAAe,CAACO,WAAW,CAACK,cAAZ,EAAD,CAHG,CAApB;AAKA,OAAO,IAAMC,KAAK,GAAGX,WAAW,CAC9BI,WAD8B,EAE9BG,YAF8B,EAG9BL,OAAO,CACLD,eAAe,MAAf,SAAmBQ,WAAnB,CADK,CAHuB,CAAzB;AASPD,cAAc,CAACI,GAAf,CAAmBN,QAAnB","sourcesContent":["import axiosMiddleware from \"redux-axios-middleware\";\r\nimport thunk from \"redux-thunk\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport RootReducer from \"./reducers/RootReducer\";\r\nimport HttpService from \"app/services/HttpService\";\r\nimport rootSaga from \"./sagas\";\r\n\r\nconst initialState = {};\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [\r\n  thunk, sagaMiddleware,\r\n\r\n  axiosMiddleware(HttpService.getAxiosClient())\r\n];\r\nexport const Store = createStore(\r\n  RootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middlewares)\r\n \r\n  )\r\n);\r\n\r\nsagaMiddleware.run(rootSaga)"]},"metadata":{},"sourceType":"module"}